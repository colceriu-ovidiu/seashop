<?php

namespace CO\EShopBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository
{
	
	public function getByCategory($category_id, $offset, $limit) {
		$em = $this->getManager();
		$qb = $em->createQueryBuilder()
							->select('p')
							->from('COEShopBundle:Product', 'p')
							->where("p.category = :category_id")
							->setParameter('category_id', $category_id)	;

		/*$qbc = $em->createQueryBuilder()
							->select('count(p)')
							->from('COEShopBundle:Product', 'p')
							->where("p.category = :category_id")
							->setParameter('category_id', $category_id)	;*/
							
		/*$offset =3;
		$limit =5;*/
		$qb->setFirstResult($offset);
		$qb->setMaxResults($limit);
		
		$query = $qb->getQuery();
				
		return $query->getResult();
	}
	
	public function getByCategoryCount($category_id) {
		$em = $this->getManager();

		$qbc = $em->createQueryBuilder()
							->select('count(p)')
							->from('COEShopBundle:Product', 'p')
							->where("p.category = :category_id")
							->setParameter('category_id', $category_id)	;
							
		$query = $qbc->getQuery();
				
		return $query->getSingleScalarResult();
	}

	public function findAllAsArr($p_offset=0, $p_limit=0) {
		$em = $this->getManager();
		$qb = $em->createQueryBuilder()
							->select('p.id, p.name, p.price, p.picsrc, p.slug, c.name as category_name')
							->from('COEShopBundle:Product', 'p')
							->leftJoin('p.category', 'c');
							//->where("p.category = :category_id");

		if ($p_offset>0) {
			$qb->setFirstResult($p_offset);			
		}
		if ($p_limit) {
			$qb->setMaxResults($p_limit);
		}
		
		$query = $qb->getQuery();
				
		return $query->getResult();		
	}

	public function findAllCount() {
		$em = $this->getEntityManager();

		$qbc = $em->createQueryBuilder()
							->select('count(p)')
							->from('COEShopBundle:Product', 'p');
							
		$query = $qbc->getQuery();
				
		return $query->getSingleScalarResult();
	}

	public function findByNameContains($src) {
		$em = $this->getEntityManager();
		$qb = $em->createQueryBuilder()
							->select('p')
							->from('COEShopBundle:Product', 'p')
							->where("p.name LIKE '%".$src."%'")
							->orderBy('p.name', 'ASC');
		
		$query = $qb->getQuery();
				
		return $query->getResult();
	}
	
	public function findByShortdescContains($src) {
		$em = $this->getEntityManager();
		$qb = $em->createQueryBuilder()
							->select('p')
							->from('COEShopBundle:Product', 'p')
							->where("p.shortdesc LIKE '%".$src."%'")
							->orderBy('p.shortdesc', 'ASC');
		
		$query = $qb->getQuery();
				
		return $query->getResult();
	}
	
	public function getProductsQB() {
		return $this->getEntityManager()
						->createQueryBuilder()
							->select('p')
							->from('COEShopBundle:Product', 'p')
							/*->where('c.parent IS NULL')*/
							->orderBy('p.name', 'ASC');
		
	}
	
}
